{"version":3,"file":"static/js/3304.b927a583.chunk.js","mappings":"oOAqJA,UAxIe,WACb,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAMA,GAAI,GAAV,UACE,SAAC,KAAD,CAAaC,KAAK,QAAQC,KAAK,wBAEjC,SAAC,KAAD,CAAMF,GAAI,GAAV,UACE,UAAC,KAAD,CAAOG,UAAU,OAAjB,WACE,SAAC,KAAD,WACE,+CAEF,UAAC,KAAD,YACE,eAAGA,UAAU,6BAAb,iIAEgC,yCAFhC,gBAEqE,oCAAmB,IAFxF,iBAGe,sCAHf,mCAGoE,KAClE,cAAGD,KAAK,+DAAR,6BAJF,QASA,UAAC,KAAD,CAAaA,KAAK,mBAAlB,WACE,SAAC,KAAD,CAAQE,MAAM,UAAd,wDACA,SAAC,KAAD,CAAQA,MAAM,YAAd,0DACA,SAAC,KAAD,CAAQA,MAAM,UAAd,wDACA,SAAC,KAAD,CAAQA,MAAM,SAAd,uDACA,SAAC,KAAD,CAAQA,MAAM,UAAd,wDACA,SAAC,KAAD,CAAQA,MAAM,OAAd,qDACA,SAAC,KAAD,CAAQA,MAAM,QAAd,sDACA,SAAC,KAAD,CAAQA,MAAM,OAAd,gEAKR,SAAC,KAAD,CAAMJ,GAAI,GAAV,UACE,UAAC,KAAD,CAAOG,UAAU,OAAjB,WACE,UAAC,KAAD,YACE,4CADF,KAC+B,8CAE/B,UAAC,KAAD,YACE,eAAGA,UAAU,6BAAb,sBACU,2CADV,8EAIA,UAAC,KAAD,CAAaD,KAAK,8BAAlB,WACE,UAAC,KAAD,CAAQE,MAAM,UAAd,0CAC8B,SAAC,KAAD,CAAYF,KAAK,IAAjB,6BAD9B,qCAIA,UAAC,KAAD,CAAQE,MAAM,YAAd,4CACgC,SAAC,KAAD,CAAYF,KAAK,IAAjB,6BADhC,qCAIA,UAAC,KAAD,CAAQE,MAAM,UAAd,0CAC8B,SAAC,KAAD,CAAYF,KAAK,IAAjB,6BAD9B,qCAIA,UAAC,KAAD,CAAQE,MAAM,SAAd,yCAC6B,SAAC,KAAD,CAAYF,KAAK,IAAjB,6BAD7B,qCAIA,UAAC,KAAD,CAAQE,MAAM,UAAd,0CAC8B,SAAC,KAAD,CAAYF,KAAK,IAAjB,6BAD9B,qCAIA,UAAC,KAAD,CAAQE,MAAM,OAAd,uCAC2B,SAAC,KAAD,CAAYF,KAAK,IAAjB,6BAD3B,qCAIA,UAAC,KAAD,CAAQE,MAAM,QAAd,wCAC4B,SAAC,KAAD,CAAYF,KAAK,IAAjB,6BAD5B,qCAIA,UAAC,KAAD,CAAQE,MAAM,OAAd,uCAC2B,SAAC,KAAD,CAAYF,KAAK,IAAjB,6BAD3B,gDAQR,SAAC,KAAD,CAAMF,GAAI,GAAV,UACE,UAAC,KAAD,CAAOG,UAAU,OAAjB,WACE,UAAC,KAAD,YACE,4CADF,KAC+B,sDAE/B,UAAC,KAAD,YACE,cAAGA,UAAU,6BAAb,mHAIA,SAAC,KAAD,CAAaD,KAAK,sCAAlB,UACE,UAAC,KAAD,CAAQE,MAAM,UAAd,WACE,SAAC,KAAD,CAAeC,IAAI,KAAnB,yBACA,0NAKA,mBACA,cAAGF,UAAU,OAAb,+GASV,SAAC,KAAD,CAAMH,GAAI,GAAV,UACE,UAAC,KAAD,CAAOG,UAAU,OAAjB,WACE,UAAC,KAAD,YACE,4CADF,KAC+B,8CAE/B,UAAC,KAAD,YACE,eAAGA,UAAU,6BAAb,gEACoD,0CADpD,aAGA,SAAC,KAAD,CAAaD,KAAK,8BAAlB,UACE,UAAC,KAAD,CACEE,MAAM,UACNE,aAAW,EACXC,QAAS,WACPC,MAAM,2DAJV,WAOE,+CAPF","sources":["views/notifications/alerts/Alerts.js"],"sourcesContent":["import React from 'react'\nimport {\n  CAlert,\n  CAlertHeading,\n  CAlertLink,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n} from '@coreui/react'\nimport { DocsCallout, DocsExample } from 'src/components'\n\nconst Alerts = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Alert\" href=\"components/alert\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Alert</strong>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              React Alert is prepared for any length of text, as well as an optional close button.\n              For a styling, use one of the <strong>required</strong> contextual <code>color</code>{' '}\n              props (e.g., <code>primary</code>). For inline dismissal, use the{' '}\n              <a href=\"https://coreui.io/react/docs/4.0/components/alert#dismissing\">\n                dismissing prop\n              </a>\n              .\n            </p>\n            <DocsExample href=\"components/alert\">\n              <CAlert color=\"primary\">A simple primary alertâ€”check it out!</CAlert>\n              <CAlert color=\"secondary\">A simple secondary alertâ€”check it out!</CAlert>\n              <CAlert color=\"success\">A simple success alertâ€”check it out!</CAlert>\n              <CAlert color=\"danger\">A simple danger alertâ€”check it out!</CAlert>\n              <CAlert color=\"warning\">A simple warning alertâ€”check it out!</CAlert>\n              <CAlert color=\"info\">A simple info alertâ€”check it out!</CAlert>\n              <CAlert color=\"light\">A simple light alertâ€”check it out!</CAlert>\n              <CAlert color=\"dark\">A simple dark alertâ€”check it out!</CAlert>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Alert</strong> <small>Link color</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Use the <code>&lt;CAlertLink&gt;</code> component to immediately give matching colored\n              links inside any alert.\n            </p>\n            <DocsExample href=\"components/alert#link-color\">\n              <CAlert color=\"primary\">\n                A simple primary alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give\n                it a click if you like.\n              </CAlert>\n              <CAlert color=\"secondary\">\n                A simple secondary alert with <CAlertLink href=\"#\">an example link</CAlertLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"success\">\n                A simple success alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give\n                it a click if you like.\n              </CAlert>\n              <CAlert color=\"danger\">\n                A simple danger alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give\n                it a click if you like.\n              </CAlert>\n              <CAlert color=\"warning\">\n                A simple warning alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give\n                it a click if you like.\n              </CAlert>\n              <CAlert color=\"info\">\n                A simple info alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give it\n                a click if you like.\n              </CAlert>\n              <CAlert color=\"light\">\n                A simple light alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give it\n                a click if you like.\n              </CAlert>\n              <CAlert color=\"dark\">\n                A simple dark alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give it\n                a click if you like.\n              </CAlert>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Alert</strong> <small>Additional content</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Alert can also incorporate supplementary components &amp; elements like heading,\n              paragraph, and divider.\n            </p>\n            <DocsExample href=\"components/alert#additional-content\">\n              <CAlert color=\"success\">\n                <CAlertHeading tag=\"h4\">Well done!</CAlertHeading>\n                <p>\n                  Aww yeah, you successfully read this important alert message. This example text is\n                  going to run a bit longer so that you can see how spacing within an alert works\n                  with this kind of content.\n                </p>\n                <hr />\n                <p className=\"mb-0\">\n                  Whenever you need to, be sure to use margin utilities to keep things nice and\n                  tidy.\n                </p>\n              </CAlert>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Alert</strong> <small>Dismissing</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Alerts can also be easily dismissed. Just add the <code>dismissible</code> prop.\n            </p>\n            <DocsExample href=\"components/alert#dismissing\">\n              <CAlert\n                color=\"warning\"\n                dismissible\n                onClose={() => {\n                  alert('ðŸ‘‹ Well, hi there! Thanks for dismissing me.')\n                }}\n              >\n                <strong>Go right ahead</strong> and click that dimiss over there on the right.\n              </CAlert>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Alerts\n"],"names":["xs","name","href","className","color","tag","dismissible","onClose","alert"],"sourceRoot":""}